/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–¥–µ–ª–∫–∏
 */

const { VirtualTradingSystem } = require('./virtual-trading-system.js');

async function testTradeTypeDetermination() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–¥–µ–ª–∫–∏...');
  
  const system = new VirtualTradingSystem();
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É
    await system.initialize();
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
    const testCases = [
      {
        name: 'EDU/USDT - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π leverage',
        anomalyPrice: 0.123456,
        historicalPrice: 0.122000,
        volumeLeverage: 59.9,
        expectedType: 'Short' // –û–∂–∏–¥–∞–µ–º Short, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞
      },
      {
        name: 'BTC/USDT - —É–º–µ—Ä–µ–Ω–Ω—ã–π leverage',
        anomalyPrice: 50000,
        historicalPrice: 49000,
        volumeLeverage: 5.2,
        expectedType: 'Short'
      },
      {
        name: 'ETH/USDT - –ø–∞–¥–µ–Ω–∏–µ —Ü–µ–Ω—ã',
        anomalyPrice: 3000,
        historicalPrice: 3100,
        volumeLeverage: 3.1,
        expectedType: 'Long'
      },
      {
        name: 'TEST/USDT - –Ω–µ–±–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è)',
        anomalyPrice: 1.000,
        historicalPrice: 0.995,
        volumeLeverage: 2.0,
        expectedType: null
      },
      {
        name: 'HIGH/USDT - –æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π leverage —Å –º–∞–ª—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ü–µ–Ω—ã',
        anomalyPrice: 0.1005,
        historicalPrice: 0.1000,
        volumeLeverage: 25.0,
        expectedType: 'Short' // –î–æ–ª–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å–æ —Å–Ω–∏–∂–µ–Ω–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º
      }
    ];
    
    console.log('\nüìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –¢–ò–ü–ê –°–î–ï–õ–ö–ò:\n');
    
    for (const testCase of testCases) {
      console.log(`üîç –¢–µ—Å—Ç: ${testCase.name}`);
      console.log('‚îÄ'.repeat(50));
      
      // –í—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
      const originalThreshold = system.config.priceThreshold;
      
      // –¢–µ—Å—Ç —Å –æ–±—ã—á–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º
      let tradeType = system.determineTradeType(testCase.anomalyPrice, testCase.historicalPrice);
      console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å –æ–±—ã—á–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º (${(originalThreshold * 100).toFixed(2)}%): ${tradeType || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
      
      // –¢–µ—Å—Ç —Å –≤—ã—Å–æ–∫–∏–º leverage –∏ —Å–Ω–∏–∂–µ–Ω–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º
      if (!tradeType && testCase.volumeLeverage > 20) {
        console.log(`üî• –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–Ω–∏–∂–µ–Ω–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è leverage ${testCase.volumeLeverage}x...`);
        system.config.priceThreshold = 0.005; // 0.5%
        tradeType = system.determineTradeType(testCase.anomalyPrice, testCase.historicalPrice);
        console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ —Å–Ω–∏–∂–µ–Ω–Ω—ã–º –ø–æ—Ä–æ–≥–æ–º (0.50%): ${tradeType || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
      }
      
      // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥
      system.config.priceThreshold = originalThreshold;
      
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const isCorrect = tradeType === testCase.expectedType;
      const status = isCorrect ? '‚úÖ –ü–†–û–ô–î–ï–ù' : '‚ùå –ü–†–û–í–ê–õ–ï–ù';
      console.log(`${status} - –û–∂–∏–¥–∞–ª–æ—Å—å: ${testCase.expectedType}, –ü–æ–ª—É—á–µ–Ω–æ: ${tradeType}`);
      
      console.log('\n');
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  } finally {
    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
    await system.stop();
  }
}

// –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
if (require.main === module) {
  testTradeTypeDetermination().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    process.exit(1);
  });
}

module.exports = { testTradeTypeDetermination }; 