const fs = require('fs');
const path = require('path');
/**
 * –°–∏—Å—Ç–µ–º–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
 * –ù–∞—Å–ª–µ–¥—É–µ—Ç –æ–±—â—É—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É –∏–∑ VirtualTradingBaseService
 */

const { BinanceWebSocketProvider } = require('../src/infrastructure/adapters/BinanceWebSocketProvider.js');
const { VirtualTradingBaseService } = require('../src/domain/services/VirtualTradingBaseService');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è WebSocket —Å–∏—Å—Ç–µ–º—ã (–Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –∏–∑ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
const CONFIG = {
  // –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø–æ—Ç–æ–∫–æ–≤
  activeTradesInterval: 30 * 1000,      // 30 —Å–µ–∫—É–Ω–¥ - Trade List (–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
  pendingCheckInterval: 30 * 1000,      // 30 —Å–µ–∫—É–Ω–¥ - Watchlist (—Å—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
  anomalyCheckInterval: 5 * 60 * 1000,  // 5 –º–∏–Ω—É—Ç - Anomalies (–Ω–∏–∑—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
  
  // WebSocket —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  useWebSocket: true, // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å WebSocket –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
  websocketIntervals: {
    watchlist: '1m', // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è watchlist (1 –º–∏–Ω—É—Ç–∞)
    tradeList: '1m'  // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è trade list (1 –º–∏–Ω—É—Ç–∞)
  }
};

/**
 * –°–∏—Å—Ç–µ–º–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å WebSocket –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç WebSocket –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ (watchlist –∏ trade list)
 * –∏ REST API –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ (–ø–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π)
 */
class VirtualTradingSystemWebSocket extends VirtualTradingBaseService {
  constructor() {
    // –í—ã–∑–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    super(CONFIG);
    
    // WebSocket —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è
    this.wsProvider = null;
    this.wsConnected = false;
    
    // –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è REST API (–º–µ–¥–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫)
    this.anomalyCheckInterval = null;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    this.systemStartTime = new Date();
    this.lastStatisticsUpdate = new Date();
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async initialize() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å WebSocket...');
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
    await this.loadFilteredCoins();
    await this.loadPendingAnomalies();
    await this.loadActiveTrades();
    await this.loadTradeHistory();
    await this.loadTradingStatistics();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebSocket –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    if (CONFIG.useWebSocket) {
      await this.initializeWebSocket();
    }
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  async initializeWebSocket() {
    console.log('üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞...');
    
    this.wsProvider = new BinanceWebSocketProvider();
    
    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    this.wsProvider.onConnect(() => {
      console.log('üéâ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω!');
      this.wsConnected = true;
      this.subscribeToWatchlistStreams();
      this.subscribeToTradeListStreams();
    });
    
    this.wsProvider.onDisconnect((code, reason) => {
      console.log(`üîå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω: ${code} - ${reason}`);
      this.wsConnected = false;
    });
    
    this.wsProvider.onError((error) => {
      console.error('‚ùå WebSocket –æ—à–∏–±–∫–∞:', error);
    });
    
    // –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket
    await this.wsProvider.connect();
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ–∫–∏ –¥–ª—è watchlist (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  subscribeToWatchlistStreams() {
    if (!this.wsConnected || this.pendingAnomalies.size === 0) {
      return;
    }
    
    const streams = [];
    
    this.pendingAnomalies.forEach((anomaly, symbol) => {
      streams.push({
        symbol: symbol.replace('/USDT', ''),
        interval: this.config.websocketIntervals.watchlist,
        callback: (symbol, candle) => this.handleWatchlistKline(symbol, candle)
      });
    });
    
    if (streams.length > 0) {
      this.wsProvider.subscribeToMultipleStreams(streams);
      console.log(`üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${streams.length} –ø–æ—Ç–æ–∫–æ–≤ watchlist`);
    }
  }

  /**
   * –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ–∫–∏ –¥–ª—è trade list (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  subscribeToTradeListStreams() {
    if (!this.wsConnected || this.activeTrades.size === 0) {
      return;
    }
    
    const streams = [];
    
    this.activeTrades.forEach((trade, symbol) => {
      streams.push({
        symbol: symbol.replace('/USDT', ''),
        interval: this.config.websocketIntervals.tradeList,
        callback: (symbol, candle) => this.handleTradeListKline(symbol, candle)
      });
    });
    
    if (streams.length > 0) {
      this.wsProvider.subscribeToMultipleStreams(streams);
      console.log(`üì° –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${streams.length} –ø–æ—Ç–æ–∫–æ–≤ trade list`);
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–µ—á–∏ –¥–ª—è watchlist (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  handleWatchlistKline(symbol, candle) {
    const fullSymbol = `${symbol}/USDT`;
    const anomaly = this.pendingAnomalies.get(fullSymbol);
    
    if (!anomaly) {
      return;
    }
    
    console.log(`üìä [WATCHLIST] ${fullSymbol} - –ù–æ–≤–∞—è —Å–≤–µ—á–∞: $${candle.close}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–∞
    this.checkEntryConfirmation(fullSymbol, anomaly, candle);
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–π–º–∞—É—Ç watchlist
    this.checkWatchlistTimeout(fullSymbol, anomaly);
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–µ—á–∏ –¥–ª—è trade list (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  async handleTradeListKline(symbol, candle) {
    const fullSymbol = `${symbol}/USDT`;
    const trade = this.activeTrades.get(fullSymbol);
    
    if (!trade) {
      return;
    }
    
    console.log(`üìä [TRADE LIST] ${fullSymbol} - –ù–æ–≤–∞—è —Å–≤–µ—á–∞: $${candle.close}`);
    
    // –û–±–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–µ–Ω—É
    trade.lastPrice = candle.close;
    trade.lastUpdateTime = new Date().toISOString();
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
    this.checkTradeExitConditions(trade, candle.close);
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    await this.saveActiveTrades();
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–∞ –¥–ª—è watchlist (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  async checkEntryConfirmation(symbol, anomaly, currentCandle) {
    const currentPrice = currentCandle.close;
    
    console.log(`üîç [CONFIRMATION] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ö–æ–¥–∞ –¥–ª—è ${symbol}:`);
    console.log(`   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $${currentPrice}`);
    console.log(`   üìä –ê–Ω–æ–º–∞–ª–∏—è: ${anomaly.tradeType} –ø–æ $${anomaly.anomalyPrice}`);
    
    // –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞)
    if (!anomaly.isConsolidated) {
      console.log(`üîç [CONSOLIDATION] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è ${symbol}...`);
      
      if (!this.checkConsolidation(currentCandle)) {
        console.log(`‚ùå ${symbol} - –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞—Å—å, —É–¥–∞–ª—è–µ–º –∏–∑ watchlist`);
        this.pendingAnomalies.delete(symbol);
        await this.savePendingAnomalies();
        return;
      }
      
      // –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞—Å—å, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ç–∞–ø
      console.log(`‚úÖ ${symbol} - –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞—Å—å`);
      anomaly.isConsolidated = true;
      anomaly.closePrice = currentPrice;
      
      // –≠—Ç–∞–ø 3: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ—Ç–∞–ø–∞ –∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤
      const { entryLevel, cancelLevel } = this.calculateEntryLevels(currentPrice, anomaly.tradeType);
      anomaly.entryLevel = entryLevel;
      anomaly.cancelLevel = cancelLevel;
      
      console.log(`üìä ${symbol} - –£—Ä–æ–≤–Ω–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: –≤—Ö–æ–¥ $${entryLevel}, –æ—Ç–º–µ–Ω–∞ $${cancelLevel}`);
      await this.savePendingAnomalies();
      return;
    }
    
    // –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –≤—Ö–æ–¥–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã
    const result = this.checkEntryConditions(currentPrice, anomaly.entryLevel, anomaly.cancelLevel, anomaly.tradeType);
    
    if (result === 'entry') {
      console.log(`‚úÖ ${symbol} - –£—Å–ª–æ–≤–∏–µ –≤—Ö–æ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!`);
      
      // –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
      const currentVolume = currentCandle[5]; // –û–±—ä–µ–º —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–∏
      const trade = this.createVirtualTrade(
        symbol, 
        anomaly.tradeType, 
        currentPrice, 
        anomaly.anomalyId, 
        currentVolume,
        anomaly.entryLevel,
        anomaly.cancelLevel
      );
      
      // –£–¥–∞–ª–∏—Ç—å –∏–∑ watchlist
      this.pendingAnomalies.delete(symbol);
      
      // –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç WebSocket –ø–æ—Ç–æ–∫–∞
      if (this.wsProvider) {
        this.wsProvider.unsubscribeFromKline(symbol.replace('/USDT', ''));
      }
      
      // –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Ç–æ–∫ –¥–ª—è trade list
      if (this.wsProvider && this.wsConnected) {
        this.wsProvider.subscribeToKline(
          symbol.replace('/USDT', ''),
          this.config.websocketIntervals.tradeList,
          (symbol, candle) => this.handleTradeListKline(symbol, candle)
        );
      }
      
      // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
      await this.sendNewTradeNotification(trade);
      
      // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥—ã –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
      await this.saveActiveTrades();
      await this.savePendingAnomalies();
      
    } else if (result === 'cancel') {
      console.log(`‚ùå ${symbol} - –£—Å–ª–æ–≤–∏–µ –æ—Ç–º–µ–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, —É–¥–∞–ª—è–µ–º –∏–∑ watchlist`);
      this.pendingAnomalies.delete(symbol);
      await this.savePendingAnomalies();
      
      // –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç WebSocket –ø–æ—Ç–æ–∫–∞
      if (this.wsProvider) {
        this.wsProvider.unsubscribeFromKline(symbol.replace('/USDT', ''));
      }
      
    } else {
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–π–º–∞—É—Ç
      if (this.checkEntryTimeout(anomaly)) {
        console.log(`‚è∞ ${symbol} - –¢–∞–π–º–∞—É—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ö–æ–¥–∞, —É–¥–∞–ª—è–µ–º –∏–∑ watchlist`);
        this.pendingAnomalies.delete(symbol);
        await this.savePendingAnomalies();
        
        // –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç WebSocket –ø–æ—Ç–æ–∫–∞
        if (this.wsProvider) {
          this.wsProvider.unsubscribeFromKline(symbol.replace('/USDT', ''));
        }
      } else {
        console.log(`‚è≥ ${symbol} - –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π...`);
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–π–º–∞—É—Ç watchlist (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  checkWatchlistTimeout(symbol, anomaly) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞
    if (this.checkEntryTimeout(anomaly)) {
      console.log(`‚è∞ ${symbol} - –¢–∞–π–º–∞—É—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ö–æ–¥–∞ (6 TF), —É–¥–∞–ª—è–µ–º –∏–∑ watchlist`);
      
      // –£–¥–∞–ª–∏—Ç—å –∏–∑ watchlist
      this.pendingAnomalies.delete(symbol);
      
      // –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç WebSocket –ø–æ—Ç–æ–∫–∞
      if (this.wsProvider) {
        this.wsProvider.unsubscribeFromKline(symbol.replace('/USDT', ''));
      }
      
      // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
      this.savePendingAnomalies();
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ª–æ–≤–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–¥–µ–ª–∫–∏ (WebSocket —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞)
   */
  checkTradeExitConditions(trade, currentPrice) {
    const { symbol, type, entryPrice, stopLoss, takeProfit } = trade;
    
    let shouldClose = false;
    let reason = '';
    let profitLoss = 0;
    
    if (type === 'Long') {
      if (currentPrice <= stopLoss) {
        shouldClose = true;
        reason = 'Stop Loss';
        profitLoss = ((currentPrice - entryPrice) / entryPrice) * 100;
      } else if (currentPrice >= takeProfit) {
        shouldClose = true;
        reason = 'Take Profit';
        profitLoss = ((currentPrice - entryPrice) / entryPrice) * 100;
      }
    } else { // Short
      if (currentPrice >= stopLoss) {
        shouldClose = true;
        reason = 'Stop Loss';
        profitLoss = ((entryPrice - currentPrice) / entryPrice) * 100;
      } else if (currentPrice <= takeProfit) {
        shouldClose = true;
        reason = 'Take Profit';
        profitLoss = ((entryPrice - currentPrice) / entryPrice) * 100;
      }
    }
    
    if (shouldClose) {
      console.log(`üî¥ ${symbol} - –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–¥–µ–ª–∫–∏: ${reason} (${profitLoss.toFixed(2)}%)`);
      this.closeTrade(trade, currentPrice, reason, profitLoss);
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–Ω–æ–º–∞–ª–∏–∏ –¥–ª—è –æ–¥–Ω–æ–π –º–æ–Ω–µ—Ç—ã (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async checkAnomalies(coin) {
    // –í WebSocket –≤–µ—Ä—Å–∏–∏ –∞–Ω–æ–º–∞–ª–∏–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ REST API
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–Ω–æ–º–∞–ª–∏–π
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–æ–º–∞–ª–∏–π –¥–ª—è ${coin.symbol}...`);
    
    // –ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∞–Ω–æ–º–∞–ª–∏—é –µ—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
    if (this.pendingAnomalies.size === 0 && this.activeTrades.size === 0) {
      console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∞–Ω–æ–º–∞–ª–∏–∏...');
      const testAnomaly = {
        symbol: 'BTC/USDT',
        anomalyId: 'BTC_TEST_' + Date.now(),
        tradeType: 'Long',
        anomalyTime: new Date().toISOString(),
        watchlistTime: new Date().toISOString(),
        anomalyCandleIndex: 6,
        anomalyPrice: 50000,
        historicalPrice: 49000
      };
      
      this.pendingAnomalies.set(testAnomaly.symbol, testAnomaly);
      await this.savePendingAnomalies();
      
      // –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ WebSocket –ø–æ—Ç–æ–∫
      if (this.wsProvider && this.wsConnected) {
        this.wsProvider.subscribeToKline(
          'BTCUSDT',
          this.config.websocketIntervals.watchlist,
          (symbol, candle) => this.handleWatchlistKline(symbol, candle)
        );
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å pending anomalies (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async checkPendingAnomalies() {
    // –í WebSocket –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ handleWatchlistKline
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏
    console.log(`‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ ${this.pendingAnomalies.size} pending anomalies...`);
  }

  /**
   * –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async trackActiveTrades() {
    // –í WebSocket –≤–µ—Ä—Å–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ handleTradeListKline
    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏
    console.log(`üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ ${this.activeTrades.size} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫...`);
  }

  /**
   * –ü–æ—Ç–æ–∫ 1: –ü–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π (REST API)
   */
  async runAnomalyCheck() {
    console.log('üîç [–ü–û–¢–û–ö 1] –ü–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç...');
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–Ω–æ–º–∞–ª–∏–π —á–µ—Ä–µ–∑ REST API
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ${this.filteredCoins.length} –º–æ–Ω–µ—Ç –Ω–∞ –∞–Ω–æ–º–∞–ª–∏–∏...`);
    
    // –ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∞–Ω–æ–º–∞–ª–∏—é
    if (this.pendingAnomalies.size === 0 && this.activeTrades.size === 0) {
      console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∞–Ω–æ–º–∞–ª–∏–∏...');
      const testAnomaly = {
        symbol: 'BTC/USDT',
        anomalyId: 'BTC_TEST_' + Date.now(),
        tradeType: 'Long',
        anomalyTime: new Date().toISOString(),
        watchlistTime: new Date().toISOString(),
        anomalyCandleIndex: 6,
        anomalyPrice: 50000,
        historicalPrice: 49000
      };
      
      this.pendingAnomalies.set(testAnomaly.symbol, testAnomaly);
      await this.savePendingAnomalies();
      
      // –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ WebSocket –ø–æ—Ç–æ–∫
      if (this.wsProvider && this.wsConnected) {
        this.wsProvider.subscribeToKline(
          'BTCUSDT',
          this.config.websocketIntervals.watchlist,
          (symbol, candle) => this.handleWatchlistKline(symbol, candle)
        );
      }
    }
    
    console.log('‚úÖ [–ü–û–¢–û–ö 1] –ü–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω');
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async start() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å WebSocket...');
    
    await this.initialize();
    
    // –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫ (–ø–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π) —á–µ—Ä–µ–∑ REST API
    await this.runAnomalyCheck();
    
    this.anomalyCheckInterval = setInterval(async () => {
      await this.runAnomalyCheck();
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞');
    console.log('   üîç –ü–æ—Ç–æ–∫ 1 (–∞–Ω–æ–º–∞–ª–∏–∏): –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (REST API)');
    console.log('   ‚è≥ –ü–æ—Ç–æ–∫ 2 (watchlist): WebSocket –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
    console.log('   üìä –ü–æ—Ç–æ–∫ 3 (trade list): WebSocket –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É (–ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  async stop() {
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
    
    if (this.anomalyCheckInterval) {
      clearInterval(this.anomalyCheckInterval);
      this.anomalyCheckInterval = null;
    }
    
    if (this.wsProvider) {
      this.wsProvider.disconnect();
    }
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –º–µ—Ç–æ–¥–∞)
   */
  showStatistics() {
    // –í—ã–∑–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–π –º–µ—Ç–æ–¥
    super.showStatistics();
    
    // –î–æ–±–∞–≤–∏—Ç—å WebSocket —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if (this.wsProvider) {
      const wsStatus = this.wsProvider.getConnectionStatus();
      console.log(`üîå WebSocket: ${wsStatus.isConnected ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}`);
      console.log(`üì° –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: ${wsStatus.activeSubscriptions}`);
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
module.exports = { VirtualTradingSystemWebSocket, CONFIG }; 