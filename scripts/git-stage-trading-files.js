#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ Git
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö JSON —Ñ–∞–π–ª–æ–≤
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ Git
const TRADING_FILES = [
  'data/active-trades.json',
  'data/pending-anomalies.json',
  'data/trade-history.json',
  'data/trading-statistics.json'
];

/**
 * –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –≤ Git stage
 */
function stageTradingFiles() {
  let stagedCount = 0;
  
  for (const file of TRADING_FILES) {
    try {
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
      if (fs.existsSync(file)) {
        // –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ Git stage
        execSync(`git add "${file}"`, { stdio: 'pipe' });
        stagedCount++;
      } else {
        console.log(`‚ö†Ô∏è –§–∞–π–ª ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${file}:`, error.message);
    }
  }
  
  if (stagedCount > 0) {
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
    try {
      execSync('git status --porcelain', { stdio: 'pipe' });
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ Git:', error.message);
    }
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö
 */
function checkTradingFilesChanges() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö...');
  
  try {
    const status = execSync('git status --porcelain', { encoding: 'utf8' });
    const lines = status.split('\n').filter(line => line.trim());
    
    const tradingFileChanges = lines.filter(line => {
      const fileName = line.substring(3); // –£–±—Ä–∞—Ç—å —Å—Ç–∞—Ç—É—Å (M, A, D, etc.)
      return TRADING_FILES.some(tradingFile => fileName.includes(tradingFile));
    });
    
    if (tradingFileChanges.length > 0) {
      console.log('üìà –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö:');
      tradingFileChanges.forEach(change => {
        console.log(`   ${change}`);
      });
      return true;
    } else {
      console.log('‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Git:', error.message);
    return false;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
function main() {
  const args = process.argv.slice(2);
  const command = args[0] || 'stage';
  
  console.log('üöÄ Git Trading Files Manager');
  console.log('=============================\n');
  
  switch (command) {
    case 'stage':
      stageTradingFiles();
      break;
      
    case 'check':
      checkTradingFilesChanges();
      break;
      
    case 'auto':
      if (checkTradingFilesChanges()) {
        console.log('\nüîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...');
        stageTradingFiles();
      }
      break;
      
    default:
      console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
      console.log('  node scripts/git-stage-trading-files.js [–∫–æ–º–∞–Ω–¥–∞]');
      console.log('');
      console.log('–ö–æ–º–∞–Ω–¥—ã:');
      console.log('  stage  - –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ stage');
      console.log('  check  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö');
      console.log('  auto   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã');
      console.log('');
      console.log('–ü—Ä–∏–º–µ—Ä—ã:');
      console.log('  node scripts/git-stage-trading-files.js stage');
      console.log('  node scripts/git-stage-trading-files.js check');
      console.log('  node scripts/git-stage-trading-files.js auto');
  }
}

// –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}

module.exports = {
  stageTradingFiles,
  checkTradingFilesChanges
}; 