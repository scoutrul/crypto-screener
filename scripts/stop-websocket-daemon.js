const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å WebSocket
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç daemon –ø—Ä–æ—Ü–µ—Å—Å –ø–æ PID
 */
function stopWebSocketDaemon() {
  console.log('üõë –û–°–¢–ê–ù–û–í–ö–ê –°–ò–°–¢–ï–ú–´ –í–ò–†–¢–£–ê–õ–¨–ù–û–ô –¢–û–†–ì–û–í–õ–ò –° WEB SOCKET');
  console.log('=' .repeat(50));
  
  const pidFile = path.join(__dirname, '../websocket-system.pid');
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ PID —Ñ–∞–π–ª–∞
  if (!fs.existsSync(pidFile)) {
    console.log('‚ÑπÔ∏è PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∏—Å—Ç–µ–º–∞, –≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞.');
    return;
  }
  
  try {
    // –ü—Ä–æ—á–∏—Ç–∞—Ç—å PID
    const pid = fs.readFileSync(pidFile, 'utf8').trim();
    console.log(`üìÑ –ù–∞–π–¥–µ–Ω PID: ${pid}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
    try {
      process.kill(pid, 0); // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
      console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
      
      // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª SIGTERM
      process.kill(pid, 'SIGTERM');
      console.log('üì§ –°–∏–≥–Ω–∞–ª SIGTERM –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
      
      // –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
      setTimeout(() => {
        try {
          process.kill(pid, 0);
          console.log('‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º SIGKILL...');
          process.kill(pid, 'SIGKILL');
          console.log('üì§ –°–∏–≥–Ω–∞–ª SIGKILL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        } catch (error) {
          console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
        
        // –£–¥–∞–ª–∏—Ç—å PID —Ñ–∞–π–ª
        try {
          fs.unlinkSync(pidFile);
          console.log('üóëÔ∏è PID —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
        } catch (error) {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å PID —Ñ–∞–π–ª:', error.message);
        }
      }, 3000);
      
    } catch (error) {
      console.log('‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)');
      
      // –£–¥–∞–ª–∏—Ç—å PID —Ñ–∞–π–ª
      try {
        fs.unlinkSync(pidFile);
        console.log('üóëÔ∏è PID —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω');
      } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å PID —Ñ–∞–π–ª:', error.message);
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–∞:', error.message);
  }
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ daemon
stopWebSocketDaemon(); 