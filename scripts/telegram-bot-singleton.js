const TelegramBot = require('node-telegram-bot-api');
const messageQueue = require('./telegram-message-queue');

/**
 * –°–∏–Ω–≥–ª—Ç–æ–Ω –¥–ª—è Telegram –±–æ—Ç–∞
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω—É—é —Ç–æ—á–∫—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ –≤–æ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º–µ
 */
class TelegramBotSingleton {
  constructor() {
    this.bot = null;
    this.isInitialized = false;
    this.initializationPromise = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
   */
  async initialize() {
    // –ï—Å–ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –≤–µ—Ä–Ω—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä
    if (this.isInitialized && this.bot) {
      return this.bot;
    }

    // –ï—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –¥–æ–∂–¥–∞—Ç—å—Å—è –µ—ë –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if (this.initializationPromise) {
      return await this.initializationPromise;
    }

    // –ù–∞—á–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    this.initializationPromise = this._doInitialize();
    return await this.initializationPromise;
  }

  /**
   * –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   */
  async _doInitialize() {
    try {
      const token = process.env.TELEGRAM_BOT_TOKEN;
      if (!token) {
        console.log('‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã');
        return null;
      }

      // –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
      if (!this.bot) {
        this.bot = new TelegramBot(token, { 
          polling: true,
          polling_options: {
            timeout: 10,
            limit: 100,
            allowed_updates: ['message']
          }
        });
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π
      messageQueue.setBot(this.bot);
      
      // –î–æ–∂–¥–∞—Ç—å—Å—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞
      await new Promise(resolve => setTimeout(resolve, 5000));
      
      // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç –≥–æ—Ç–æ–≤
      if (!this.bot.isPolling()) {
        console.warn('‚ö†Ô∏è Telegram –±–æ—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        return null;
      }
      
      this.isInitialized = true;
      console.log('ü§ñ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—Å–∏–Ω–≥–ª—Ç–æ–Ω)');
      
      return this.bot;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞:', error.message);
      if (error.message.includes('409 Conflict')) {
        console.log('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∑–∞–ø—É—â–µ–Ω –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞');
        console.log('üí° –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: taskkill /f /im node.exe');
      }
      return null;
    } finally {
      this.initializationPromise = null;
    }
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
   */
  getBot() {
    return this.bot;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ª–∏ –±–æ—Ç
   */
  isReady() {
    return this.isInitialized && this.bot && this.bot.isPolling();
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
   */
  async stop() {
    if (this.bot) {
      try {
        this.bot.stopPolling();
        console.log('ü§ñ Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—Å–∏–Ω–≥–ª—Ç–æ–Ω)');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram –±–æ—Ç–∞:', error.message);
      }
    }
    this.isInitialized = false;
    this.bot = null;
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–æ—Ç–∞
   */
  getStatus() {
    return {
      isInitialized: this.isInitialized,
      isReady: this.isReady(),
      hasBot: !!this.bot,
      isPolling: this.bot ? this.bot.isPolling() : false
    };
  }
}

// –°–æ–∑–¥–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∏–Ω–≥–ª—Ç–æ–Ω–∞
const telegramBotSingleton = new TelegramBotSingleton();

module.exports = telegramBotSingleton; 