const TelegramBot = require('node-telegram-bot-api');

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Telegram –±–æ—Ç–∞
 */
class TelegramMessageQueue {
  constructor() {
    this.queue = [];
    this.isProcessing = false;
    this.bot = null;
    this.delayBetweenMessages = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
   */
  setBot(bot) {
    this.bot = bot;
    console.log('üì§ Telegram –æ—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥—å
   */
  async addMessage(chatId, message, options = {}) {
    const messageItem = {
      chatId,
      message,
      options,
      timestamp: Date.now(),
      retries: 0,
      maxRetries: 3
    };

    this.queue.push(messageItem);
    console.log(`üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å (${this.queue.length} –≤ –æ—á–µ—Ä–µ–¥–∏)`);

    // –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞
    if (!this.isProcessing) {
      this.processQueue();
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π
   */
  async processQueue() {
    if (this.isProcessing || this.queue.length === 0) {
      return;
    }

    this.isProcessing = true;
    console.log(`üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏ (${this.queue.length} —Å–æ–æ–±—â–µ–Ω–∏–π)`);

    while (this.queue.length > 0) {
      const messageItem = this.queue.shift();
      
      try {
        await this.sendMessage(messageItem);
        console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (${this.queue.length} –æ—Å—Ç–∞–ª–æ—Å—å)`);
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        if (this.queue.length > 0) {
          await new Promise(resolve => setTimeout(resolve, this.delayBetweenMessages));
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, error.message);
        
        // –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É, –µ—Å–ª–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
        if (messageItem.retries < messageItem.maxRetries) {
          messageItem.retries++;
          this.queue.unshift(messageItem);
          console.log(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ ${messageItem.retries}/${messageItem.maxRetries}`);
          
          // –£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö
          await new Promise(resolve => setTimeout(resolve, this.delayBetweenMessages * 2));
        } else {
          console.error(`‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ ${messageItem.maxRetries} –ø–æ–ø—ã—Ç–æ–∫`);
        }
      }
    }

    this.isProcessing = false;
    console.log('‚úÖ –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞');
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
   */
  async sendMessage(messageItem) {
    if (!this.bot) {
      throw new Error('–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (!this.bot.isPolling()) {
      throw new Error('–ë–æ—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π');
    }

    return await this.bot.sendMessage(
      messageItem.chatId, 
      messageItem.message, 
      messageItem.options
    );
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏
   */
  getQueueStats() {
    return {
      queueLength: this.queue.length,
      isProcessing: this.isProcessing,
      totalMessages: this.queue.length + (this.isProcessing ? 1 : 0)
    };
  }

  /**
   * –û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å
   */
  clearQueue() {
    const clearedCount = this.queue.length;
    this.queue = [];
    console.log(`üóëÔ∏è –û—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞ (${clearedCount} —Å–æ–æ–±—â–µ–Ω–∏–π —É–¥–∞–ª–µ–Ω–æ)`);
    return clearedCount;
  }

  /**
   * –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
   */
  setDelay(delayMs) {
    this.delayBetweenMessages = delayMs;
    console.log(`‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${delayMs}ms`);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –æ—á–µ—Ä–µ–¥–∏
   */
  getQueueInfo() {
    const stats = this.getQueueStats();
    return {
      ...stats,
      delayBetweenMessages: this.delayBetweenMessages,
      oldestMessage: this.queue.length > 0 ? this.queue[0].timestamp : null,
      newestMessage: this.queue.length > 0 ? this.queue[this.queue.length - 1].timestamp : null
    };
  }
}

// –°–æ–∑–¥–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ—á–µ—Ä–µ–¥–∏
const globalMessageQueue = new TelegramMessageQueue();

module.exports = globalMessageQueue; 