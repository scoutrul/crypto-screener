/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–µ—Ç –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
 */
const { CryptoScreenerApp } = require('../src/app');
const FilterCoinsByMarketCapCompactUseCase = require('../src/application/use-cases/FilterCoinsByMarketCapCompactUseCase');

async function filterByMarketCapCompact() {
  let app;
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–Ω–µ—Ç –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = new CryptoScreenerApp();
    await app.start();
    
    // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    const coinRepository = global.cryptoScreener.coinRepository;
    const notificationService = global.cryptoScreener.notificationService;
    
    // –°–æ–∑–¥–∞—Ç—å use case –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    const filterUseCase = new FilterCoinsByMarketCapCompactUseCase(coinRepository, notificationService);
    
    console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–µ—Ç —Å –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π >= 40 BTC...');
    
    // –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    await filterUseCase.execute({
      totalLimit: 250,        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ø-250 –º–æ–Ω–µ—Ç (–æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å)
      minMarketCapBTC: 40,    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è 40 BTC
      currency: 'btc',        // –í BTC –ø–∞—Ä–∞—Ö
      maxResults: 200         // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-200 –∏–∑ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö
    });
    
    console.log('‚úÖ –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error('Stack:', error.stack);
  } finally {
    if (app) {
      await app.stop();
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  filterByMarketCapCompact().catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  });
}

module.exports = { filterByMarketCapCompact }; 