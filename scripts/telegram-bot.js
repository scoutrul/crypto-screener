const TelegramBot = require('node-telegram-bot-api');
const WatchlistStatusSender = require('./send-watchlist-status');
const { CryptoScreenerApp } = require('../src/app');

/**
 * Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Crypto Screener
 */
class CryptoTelegramBot {
  constructor() {
    this.bot = null;
    this.app = null;
    this.watchlistSender = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
   */
  async initialize() {
    try {
      // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ .env
      require('dotenv').config();
      const token = process.env.TELEGRAM_BOT_TOKEN;
      
      if (!token) {
        throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
      }

      // –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
      this.bot = new TelegramBot(token, { 
        polling: true,
        polling_options: {
          timeout: 10,
          limit: 100,
          allowed_updates: ['message']
        }
      });
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      this.app = new CryptoScreenerApp();
      await this.app.start();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å watchlist
      this.watchlistSender = new WatchlistStatusSender();
      
      console.log('ü§ñ Telegram –±–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã
      this.setupCommands();

      // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç
      const chatId = process.env.TELEGRAM_CHAT_ID;
      if (chatId) {
        const message = `ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n` +
                        `üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
                        `üìä /watchlist - –°—Ç–∞—Ç—É—Å watchlist\n` +
                        `üìà /status - –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n` +
                        `‚ùì /help - –°–ø—Ä–∞–≤–∫–∞\n\n` +
                        `üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏`;
        try {
          await this.bot.sendMessage(chatId, message);
        } catch (e) {
          console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:', e.message);
        }
      } else {
        console.log('‚ö†Ô∏è TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω, —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:', error.message);
      if (error.message.includes('409 Conflict')) {
        console.log('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∑–∞–ø—É—â–µ–Ω –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞');
        console.log('üí° –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: taskkill /f /im node.exe');
      }
    }
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
   */
  setupCommands() {
    // –ö–æ–º–∞–Ω–¥–∞ /start
    this.bot.onText(/\/start/, async (msg) => {
      const chatId = msg.chat.id;
      const message = `ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crypto Screener Bot!\n\n` +
                     `üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
                     `üìä /watchlist - –°—Ç–∞—Ç—É—Å watchlist\n` +
                     `üìà /status - –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n` +
                     `‚ùì /help - –°–ø—Ä–∞–≤–∫–∞\n\n` +
                     `üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏`;
      
      await this.bot.sendMessage(chatId, message);
    });

    // –ö–æ–º–∞–Ω–¥–∞ /watchlist
    this.bot.onText(/\/watchlist/, async (msg) => {
      const chatId = msg.chat.id;
      
      try {
        await this.bot.sendMessage(chatId, 'üìã –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç—É—Å watchlist...');
        
        // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å watchlist
        const anomalies = await this.watchlistSender.loadPendingAnomalies();
        const message = this.watchlistSender.createWatchlistMessage(anomalies);
        
        // –†–∞–∑–±–∏—Ç—å –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        const messageParts = this.watchlistSender.splitMessageForTelegram(message);
        
        for (let i = 0; i < messageParts.length; i++) {
          const part = messageParts[i];
          const partNumber = i + 1;
          const totalParts = messageParts.length;
          
          let partMessage = part;
          if (messageParts.length > 1) {
            partMessage = part.replace(
              'üìã WATCHLIST –°–¢–ê–¢–£–°:',
              `üìã WATCHLIST –°–¢–ê–¢–£–° (–ß–∞—Å—Ç—å ${partNumber}/${totalParts}):`
            );
          }
          
          await this.bot.sendMessage(chatId, partMessage, { parse_mode: 'HTML' });
          
          // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —á–∞—Å—Ç—è–º–∏
          if (i < messageParts.length - 1) {
            await new Promise(resolve => setTimeout(resolve, 1000));
          }
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ watchlist:', error.message);
        await this.bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ watchlist');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /status
    this.bot.onText(/\/status/, async (msg) => {
      const chatId = msg.chat.id;
      
      try {
        await this.bot.sendMessage(chatId, 'üìä –ó–∞–≥—Ä—É–∂–∞—é –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã...');
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
        const message = `üìä –û–ë–©–ò–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:\n\n` +
                       `ü§ñ –ë–æ—Ç: –ê–∫—Ç–∏–≤–µ–Ω\n` +
                       `üìã Watchlist: –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n` +
                       `üí∞ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–¥–µ–ª–∫–∏: –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...\n\n` +
                       `üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /watchlist –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞`;
        
        await this.bot.sendMessage(chatId, message);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
        await this.bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã');
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /help
    this.bot.onText(/\/help/, async (msg) => {
      const chatId = msg.chat.id;
      const message = `‚ùì –°–ü–†–ê–í–ö–ê –ü–û –ö–û–ú–ê–ù–î–ê–ú:\n\n` +
                     `üìä /watchlist - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å watchlist —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ –∫–∞–∂–¥–æ–π –∞–Ω–æ–º–∞–ª–∏–∏\n\n` +
                     `üìà /status - –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n\n` +
                     `üí° –ö–æ–º–∞–Ω–¥—ã:\n` +
                     `‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n` +
                     `‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n` +
                     `üìã Watchlist —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–Ω–æ–º–∞–ª–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–¥–µ–ª–∫—É`;
      
      await this.bot.sendMessage(chatId, message);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    this.bot.on('message', async (msg) => {
      if (msg.text && !msg.text.startsWith('/')) {
        const chatId = msg.chat.id;
        await this.bot.sendMessage(chatId, '‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥');
      }
    });

    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
   */
  async start() {
    try {
      await this.initialize();
      console.log('üöÄ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error.message);
    }
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
   */
  async stop() {
    if (this.bot) {
      this.bot.stopPolling();
      console.log('üõë Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if (require.main === module) {
  const bot = new CryptoTelegramBot();
  bot.start();
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGINT', async () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
    await bot.stop();
    process.exit(0);
  });
  
  process.on('SIGTERM', async () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
    await bot.stop();
    process.exit(0);
  });
}

module.exports = CryptoTelegramBot; 