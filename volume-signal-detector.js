// volume-signal-detector.js
const ccxt = require('ccxt');
const TelegramBot = require('node-telegram-bot-api');
const config = require('./config');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
const exchange = new ccxt.binance();
const bot = new TelegramBot(config.telegram.botToken);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
const symbols = config.monitoring.symbols;
const thresholds = config.thresholds;
const checkInterval = config.monitoring.checkIntervalMinutes;

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
const timeframeToMs = {
  '1m': 60000,
  '5m': 300000,
  '15m': 900000,
  '30m': 1800000,
  '1h': 3600000,
  '4h': 14400000,
  '8h': 28800000,
  '16h': 57600000,
};

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(message) {
  if (process.env.NODE_ENV === 'development') {
    console.log('üü° [DEV] –°–æ–æ–±—â–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å–æ–ª—å, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram):\n' + message);
    return;
  }
  try {
    await bot.sendMessage(config.telegram.chatId, message, { parse_mode: 'HTML' });
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error.message);
  }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞
function formatNumber(num) {
  return num.toLocaleString('en-US', { maximumFractionDigits: 2 });
}

// –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
async function checkVolumes() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ä—ë–º–æ–≤ –≤ ${new Date().toLocaleString('ru-RU')}`);
  
  for (const symbol of symbols) {
    for (const tf of Object.keys(thresholds)) {
      try {
        const { window, percent } = thresholds[tf];
        const tfMs = timeframeToMs[tf];
        const windowMs = timeframeToMs[window];
        const limit = Math.ceil(windowMs / tfMs) + 1;

        const candles = await exchange.fetchOHLCV(symbol, tf, undefined, limit);
        if (candles.length < limit) {
          console.log(`‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ${symbol} [${tf}]`);
          continue;
        }

        const volumes = candles.map(c => c[5]);
        const currentVolume = volumes[volumes.length - 1];
        const historicalVolumes = volumes.slice(0, -1);
        const avgHistoricalVolume = historicalVolumes.reduce((a, b) => a + b, 0) / historicalVolumes.length;
        
        // –†–∞—Å—á—ë—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è
        const exceedPercent = ((currentVolume / avgHistoricalVolume) - 1) * 100;
        
        if (currentVolume > avgHistoricalVolume * (1 + percent / 100)) {
          const price = candles[candles.length - 1][4]; // –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
          
          const message = `
üö® <b>–û–ë–™–Å–ú–ù–ê–Ø –ê–ù–û–ú–ê–õ–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê</b>

üìä <b>–ü–∞—Ä–∞:</b> ${symbol}
‚è∞ <b>–¢–∞–π–º—Ñ—Ä–µ–π–º:</b> ${tf}
üí∞ <b>–¶–µ–Ω–∞:</b> $${formatNumber(price)}

üìà <b>–û–±—ä—ë–º:</b>
‚Ä¢ –¢–µ–∫—É—â–∏–π (${tf}): ${formatNumber(currentVolume)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π (${window}): ${formatNumber(avgHistoricalVolume)}
‚Ä¢ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: <b>+${exceedPercent.toFixed(1)}%</b>

üéØ <b>–ü–æ—Ä–æ–≥:</b> ${percent}%
üïê <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
          `.trim();
          
          console.log(`üö® –ê–Ω–æ–º–∞–ª–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–ª—è ${symbol} [${tf}]`);
          console.log(`–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: +${exceedPercent.toFixed(1)}%`);
          
          await sendTelegramMessage(message);
        }
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log(`‚úÖ ${symbol} [${tf}]: ${formatNumber(currentVolume)} vs ${formatNumber(avgHistoricalVolume)} (${exceedPercent.toFixed(1)}%)`);
        
      } catch (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ ${symbol} [${tf}]:`, err.message);
      }
    }
  }
  
  console.log('---\n');
}

// –ó–∞–ø—É—Å–∫
console.log('üöÄ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –æ–±—ä—ë–º–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤...');
console.log(`üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ${symbols.join(', ')}`);
console.log(`‚è±Ô∏è  –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: ${checkInterval} –º–∏–Ω—É—Ç`);
console.log(`üì± Telegram: –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
console.log('---\n');

// –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
checkVolumes();

// –ó–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
setInterval(checkVolumes, checkInterval * 60 * 1000);
