// notifier.js

const axios = require('axios');
const config = require('./config');

const TELEGRAM_API_URL = `https://api.telegram.org/bot${config.telegram.botToken}/sendMessage`;

function formatNumber(n) {
  return n.toLocaleString('en-US', { maximumFractionDigits: 2 });
}

function buildMessage({ symbol, tf, price, currentVolume, avgHistoricalVolume, exceedPercent, percent, position, reversalConfirmed, time, window }) {
  return `
üö® <b>–û–ë–™–Å–ú–ù–ê–Ø –ê–ù–û–ú–ê–õ–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê</b>

üìä <b>–ü–∞—Ä–∞:</b> ${symbol}
‚è∞ <b>–¢–∞–π–º—Ñ—Ä–µ–π–º:</b> ${tf}
üí∞ <b>–¶–µ–Ω–∞:</b> $${formatNumber(price)}

üìà <b>–û–±—ä—ë–º:</b>
‚Ä¢ –¢–µ–∫—É—â–∏–π (${tf}): ${formatNumber(currentVolume)}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π (${window}): ${formatNumber(avgHistoricalVolume)}
‚Ä¢ –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: <b>+${exceedPercent.toFixed(1)}%</b>

üéØ <b>–ü–æ—Ä–æ–≥:</b> ${percent}%
üìå <b>–ê–Ω–æ–º–∞–ª–∏—è:</b> ${position === 'bottom' ? '–≤–Ω–∏–∑—É –≥—Ä–∞—Ñ–∏–∫–∞ (–ª–æ–Ω–≥-—Å–µ—Ç–∞–ø)' : '–≤–≤–µ—Ä—Ö—É –≥—Ä–∞—Ñ–∏–∫–∞ (—à–æ—Ä—Ç-—Å–µ—Ç–∞–ø)'}
‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞:</b> ${reversalConfirmed ? '–¥–∞, —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞' : '–æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–∏–≥–Ω–∞–ª'}

üïê <b>–í—Ä–µ–º—è:</b> ${time}
`.trim();
}

async function sendTelegramMessage(data) {
  const message = buildMessage(data);
  // –í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log('[ALERT]', message);
  // –í dev-—Ä–µ–∂–∏–º–µ —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Å–æ–ª—å
  if (process.env.NODE_ENV === 'development') return;
  try {
    const response = await axios.post(TELEGRAM_API_URL, {
      chat_id: config.telegram.chatId,
      text: message,
      parse_mode: 'HTML',
    });
    if (!response.data.ok) {
      console.error('Telegram API Error:', response.data);
    }
  } catch (error) {
    console.error('Failed to send Telegram message:', error.message);
  }
}

module.exports = { sendTelegramMessage };
